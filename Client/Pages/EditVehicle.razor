@page "/editvehicle"
@page "/editvehicle/{id:int}"
@inject IVehicleService VehicleService

@if(Id == null)
{
    <PageTitle>>Create a new Vehicle</PageTitle>
    <h3>Create a new Vehicle</h3>
}
else
{
    <PageTitle>Edit @vehicle.VehicleCountry</PageTitle>
    <h3>Edit @vehicle.VehicleCountry</h3>
}

<EditForm Model="vehicle" OnSubmit="HandleSubmit">
    <div>
        <label for="vehiclemodel">Vehicle Model</label>
        <InputText id="vehiclemodel" @bind-Value="vehicle.VehicleModel" class="form-control"></InputText>
    </div>
        <div>
        <label for="vehiclelevel">Vehicle level</label>
        <InputText id="vehiclelevel" @bind-Value="vehicle.VehicleLevel" class="form-control"></InputText>
    </div>
        <div>
        <label for="vehiclecountry">Vehicle Country</label>
        <InputText id="vehiclecountry" @bind-Value="vehicle.VehicleCountry" class="form-control"></InputText>
    </div>
    <div>
        <label>Vehicle Type</label><br />
        <InputSelect @bind-Value="vehicle.VehicleTypeId" class="form-select">
            @foreach (var vehicleType in VehicleService.VehicleTypes)
            {
               <option value="@vehicleType.Id">@vehicleType.Type</option>
            }         
        </InputSelect>
    </div>
    <br />
    <button type="submit" class="btn btn-primary">@btnText</button>
     <button type="button" class="btn btn-danger" @onclick="DeleteVehicle"> Delete Vehicle</button>
</EditForm>

@code {
    [Parameter]
    public int? Id { get; set; }
    string btnText = string.Empty;

    Vehicle vehicle = new Vehicle { VehicleType = new VehicleType() };
    protected override async Task OnInitializedAsync()
    {
        btnText = Id == null ? "Save new Vehicle" : "Update Vehicle";
        await VehicleService.GetVehicleTypes();
    }

    protected override async Task OnParametersSetAsync()
    {
        if(Id == null)
        {
            vehicle.VehicleType = VehicleService.VehicleTypes[0];
            vehicle.VehicleTypeId = vehicle.VehicleType.Id;
        }
        else
        {
            vehicle = await VehicleService.GetSingleVehicle((int)Id);
        }
    }

    async Task HandleSubmit()
    {
        if(Id == null)
        {
            await VehicleService.CreateVehicle(vehicle);
        }
        else
        {
            await VehicleService.UpdateVehicle(vehicle);
        }
    }

    async Task DeleteVehicle()
    {
        await VehicleService.DeleteVehicle(vehicle.Id);
    }

}
